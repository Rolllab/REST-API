"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv                          # Добавлено !!!
from datetime import timedelta                          # Добавлено !!!
import os                                               # Добавлено !!!

load_dotenv()                                           # Добавлено !!!


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-c@lh_b&w(b)8dn_bna(brw8zlc$riy&!1q3_pvfbhhkw6zqx*h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # Base apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Installed apps
    'rest_framework',                           # Добавлено !!!
    'rest_framework_simplejwt',                 # Добавлено !!!
    'django_filters',                           # Добавлено !!!
    'corsheaders',                              # Добавлено !!!
    'drf_yasg',                                 # Добавлено !!!
    'redis',                                    # Добавлено !!!

    # My apps
    'users',
    'sections',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

USER = os.getenv('DATABASE_USER')               # Добавлено !!!
PASSWORD = os.getenv('DATABASE_PASSWORD')       # Добавлено !!!
NAME = os.getenv('DATABASE_NAME')               # Добавлено !!!
HOST = os.getenv('DATABASE_HOST')               # Добавлено !!!
PORT = os.getenv('DATABASE_PORT')               # Добавлено !!!
PAD_DATABASE = os.getenv('DATABASE_PAD')        # Добавлено !!!
ENGINE = os.getenv('DATABASE_ENGINE')           # Добавлено !!!

DATABASES = {                                   # Изменено !!!
    'default': {
        'ENGINE': ENGINE,
        'NAME': NAME,
        'USER': USER,
        'PASSWORD': PASSWORD,
        'HOST': HOST,
        'PORT': PORT,

    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru-ru'                                 # Изменено на ru-ru !!!

TIME_ZONE = 'Europe/Moscow'                             # Изменено на Europe/Moscow !!!

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = (                                  # Добавлено !!!
    BASE_DIR / 'static',
)

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'users.User'

CACHE_ENABLED = os.getenv('CACHE_ENABLED')            # Добавлено !!!

if CACHE_ENABLED:
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.redis.RedisCache',
            'LOCATION': os.getenv('CACHE_LOCATION')
        }
    }

REST_FRAMEWORK = {                                   # Добавлено !!! Настройки REST
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend', ],
    'DEFAULT_AUTHENTICATION_CLASSES': ['rest_framework_simplejwt.authentication.JWTAuthentication',],
    # 'DEFAULT_PERMISSION_CLASSES': ['rest_framework.permissions.IsAuthenticated',],
    'DEFAULT_PERMISSION_CLASSES': ['rest_framework.permissions.AllowAny',],
    'TEST_REQUEST_DEFAULT_FORMAT': 'json',
    # 'TEST_REQUEST_RENDERER_CLASSES': [
    #     'rest_framework.renderers.MultiPartRenderer',
    #     'rest_framework.renderers.JSONRenderer',
    #     'rest_framework.renderers.TemplateHTMLRenderer',
    # ]
}

SIMPLE_JWT = {                                      # Добавлено !!! Настройки токена JWT
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=180),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
}

CORS_ALLOWED_ORIGINS = [                            # Добавлено !!! Документация
    'http://read-only.exemple.com',
    'http://read-and-write.exemple.com',
]

CSRF_TRUSTED_ORIGINS = [                            # Добавлено !!! Документация
    'http://read-and-write.exemple.com'
]
